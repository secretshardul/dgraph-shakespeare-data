type Paragraph @auth(
    add: { rule:  "{$ROLE: { eq: \"ADMIN\" } }" },
    update: { rule:  "{$ROLE: { eq: \"ADMIN\" } }" },
    delete: { rule:  "{$ROLE: { eq: \"ADMIN\" } }" },
) {
    paragraphId: String! @id
    charCount: Int
    paragraphNum: Int
    paragraphType: String
    phoneticText: String
    plainText: String @search(by: [fulltext])
    section: Int
    stemText: String
    wordCount: Int
    chapterName: Int # Todo connect with Chapter
    work: Work
    character: Character
}

type Character @auth(
    add: { rule:  "{$ROLE: { eq: \"ADMIN\" } }" },
    update: { rule:  "{$ROLE: { eq: \"ADMIN\" } }" },
    delete: { rule:  "{$ROLE: { eq: \"ADMIN\" } }" },
){
    charId: String! @id
    abbrev: String
    charName: String @search(by: [term])
    description: String
    speechCount: Int
    works: [Work]
    paragraphs: [Paragraph] @hasInverse(field: character)
}

type Quotation @auth(
    add: { rule:  "{$ROLE: { eq: \"ADMIN\" } }" },
    update: { rule:  "{$ROLE: { eq: \"ADMIN\" } }" },
    delete: { rule:  "{$ROLE: { eq: \"ADMIN\" } }" },
){
    quotationId: String! @id
    quotationText: String!
    location: String
}

type Work @auth(
    add: { rule:  "{$ROLE: { eq: \"ADMIN\" } }" },
    update: { rule:  "{$ROLE: { eq: \"ADMIN\" } }" },
    delete: { rule:  "{$ROLE: { eq: \"ADMIN\" } }" },
) {
    workId: String! @id
    longTitle: String
    shortTitle: String
    source: String
    title: String
    totalParagraphs: Int
    totalWords: Int
    date: Int
    genre: Genre
    paragraphs: [Paragraph] @hasInverse(field: work)
    chapters: [Chapter] @hasInverse(field: work)
    characters: [Character] @hasInverse(field: works)
}

type Chapter @auth(
    add: { rule:  "{$ROLE: { eq: \"ADMIN\" } }" },
    update: { rule:  "{$ROLE: { eq: \"ADMIN\" } }" },
    delete: { rule:  "{$ROLE: { eq: \"ADMIN\" } }" },
){
    chapterId: String! @id
    name: String
    description: String
    section: Int
    work: Work
}

type Genre @auth(
    add: { rule:  "{$ROLE: { eq: \"ADMIN\" } }" },
    update: { rule:  "{$ROLE: { eq: \"ADMIN\" } }" },
    delete: { rule:  "{$ROLE: { eq: \"ADMIN\" } }" },
){
    genreType: String! @id
    genreName: String! @search(by: [fulltext])
    works: [Work] @hasInverse(field: genre)
}

# Todo generate Admin JWT
# Dgraph.Authorization {"VerificationKey":"secretkey","Header":"X-My-App-Auth","Namespace":"https://my.app.io/jwt/claims","Algo":"HS256"}